concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=3
jobs:
  cpp:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      if: matrix.os == 'ubuntu-latest'
      name: Install CPP Dependencies (Ubuntu)
      run: sudo apt-get update && sudo apt-get install libboost-all-dev
      shell: bash
    - continue-on-error: true
      if: matrix.os == 'macos-latest'
      name: Install CPP Dependencies (Mac)
      run: 'brew install boost

        brew install bison

        echo ''export PATH="/opt/homebrew/opt/bison/bin:$PATH"'' >> ~/.bash_profile

        source ~/.bash_profile && export LDFLAGS="-L/opt/homebrew/opt/bison/lib"

        '
      shell: bash
    - continue-on-error: true
      if: matrix.os == 'windows-latest'
      name: Install CPP Dependencies (Windows)
      run: 'choco install winflexbison3

        choco install boost-msvc-14.3 --version=1.84.0.1

        echo C:\\local\\boost_1_84_0 >> $env:GITHUB_PATH

        '
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v4
      with:
        key: client-${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2-
    - continue-on-error: true
      name: Build IoTDB server and client
      run: ./mvnw clean install -P with-cpp -pl distribution,example/client-cpp-example
        -am -DskipTests
      shell: bash
    - continue-on-error: true
      name: Test with Maven
      run: ./mvnw clean verify -P with-cpp -pl iotdb-client/client-cpp -am
      shell: bash
    - continue-on-error: true
      if: failure()
      name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: cpp-IT-${{ runner.os }}
        path: iotdb-client/client-cpp/target/build/test/Testing
        retention-days: 1
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
      max-parallel: 15
  go:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{secrets.GITHUB_TOKEN}}
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2-
    - continue-on-error: true
      name: Compile IoTDB Server
      run: mvn clean package -pl distribution -am -DskipTests
    - continue-on-error: true
      name: Integration test
      run: "cd iotdb-client \ngit clone https://github.com/apache/iotdb-client-go.git\
        \ \ncd iotdb-client-go \nmake e2e_test_for_parent_git_repo e2e_test_clean_for_parent_git_repo\n"
      shell: bash
  python:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2-
    - continue-on-error: true
      name: Build IoTDB server distribution zip and python client
      run: mvn -B clean install -pl distribution,iotdb-client/client-py -am -DskipTests
    - continue-on-error: true
      name: Build IoTDB server docker image
      run: 'docker build . -f docker/src/main/Dockerfile-1c1d -t "iotdb:dev"

        docker images

        '
    - continue-on-error: true
      name: Install IoTDB python client requirements
      run: pip3 install -r iotdb-client/client-py/requirements_dev.txt
    - continue-on-error: true
      name: Check code style
      run: black iotdb-client/client-py/ --check --diff
      shell: bash
    - continue-on-error: true
      name: Integration test
      run: 'cd iotdb-client/client-py/ && pytest .

        '
      shell: bash
name: Multi-Language Client
on:
  repository_dispatch:
    types: trigger-ga___multi-language-client.yml
